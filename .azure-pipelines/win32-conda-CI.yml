# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
- master

jobs:

- job: 'Test'
  pool:
    vmImage: 'vs2017-win2016'
  strategy:
    matrix:
      # No python 2.x since no available ONNX package for Windows
      Python35:
        python.version: '3.5'
        ONNX_PATH: onnx==1.2.3
        KERAS: keras==2.1.6

      Python36:
        python.version: '3.6'
        ONNX_PATH: onnx==1.4.1
        KERAS: keras

    maxParallel: 3

  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '$(python.version)'
      architecture: 'x64'

  - powershell: Write-Host "##vso[task.prependpath]$env:CONDA\Scripts"
    displayName: Add conda to PATH

  - script: conda create --yes --quiet --name py$(python.version) -c conda-forge python=$(python.version) numpy protobuf
    displayName: Create Anaconda environment

  - script: |
      call activate py$(python.version)
      python -m pip install --upgrade pip numpy
      echo Test numpy installation... && python -c "import numpy"
      pip install %ONNX_PATH%
      pip install tensorflow
      pip install %KERAS%
      pip install -r requirements.txt
      pip install -r requirements-dev.txt
    displayName: 'Install dependencies'

  - script: |
      call activate py$(python.version)
      pip install -e .
      echo Test onnxruntime installation... && python -c "import onnxruntime"
      python -c "import onnxconverter_common"
      pytest tests --doctest-modules --junitxml=junit/test-results.xml
    displayName: 'pytest'

  - task: PublishTestResults@2
    inputs:
      testResultsFiles: '**/test-results.xml'
      testRunTitle: 'Python $(python.version)'
    condition: succeededOrFailed()
