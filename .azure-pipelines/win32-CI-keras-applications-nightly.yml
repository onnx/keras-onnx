# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
- master

jobs:

- job: 'Test'
  timeoutInMinutes: 180
  pool:
    vmImage: 'vs2017-win2016'
  strategy:
    matrix:
      # No python 2.x since no available ONNX package for Windows
      Python35:
        python.version: '3.5'
        ONNX_PATH: onnx==1.2.3
        KERAS: keras==2.1.6
        INSTALL_KERAS_RESNET:

      Python36:
        python.version: '3.6'
        ONNX_PATH: onnx==1.5.0
        KERAS: keras==2.2.4
        INSTALL_KERAS_RESNET: pip install keras-resnet

      Python37:
        python.version: '3.7'
        ONNX_PATH: onnx==1.5.0
        KERAS: keras
        INSTALL_KERAS_RESNET: pip install keras-resnet

    maxParallel: 3

  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '$(python.version)'
      architecture: 'x64'

  - powershell: Write-Host "##vso[task.prependpath]$env:CONDA\Scripts"
    displayName: Add conda to PATH

  - script: conda create --yes --quiet --name py$(python.version) -c conda-forge python=$(python.version) numpy protobuf
    displayName: Create Anaconda environment

  - script: |
      call activate py$(python.version)
      python -m pip install --upgrade pip numpy
      echo Test numpy installation... && python -c "import numpy"
      pip install %ONNX_PATH%
      pip install h5py==2.9.0
      pip install tensorflow==1.14.0
      pip install %KERAS%
      pip install -r requirements.txt
      git clone https://github.com/microsoft/onnxconverter-common
      cd onnxconverter-common
      pip install -e .
      cd ..
      pip install -r requirements-dev.txt
      pip install -i https://test.pypi.org/simple/ ort-nightly
      pip install opencv-python
      pip install tqdm
      pip install keras-segmentation
      pip install matplotlib
      git clone https://github.com/qqwweee/keras-yolo3
      %INSTALL_KERAS_RESNET%
      pip install git+https://www.github.com/keras-team/keras-contrib.git
    displayName: 'Install dependencies'

  - script: |
      call activate py$(python.version)
      pip install -e .
      echo Test onnxruntime installation... && python -c "import onnxruntime"
      cd applications/nightly_build
      python run_all.py --exclude "test_mask_rcnn.py"
    displayName: 'pytest'

  - script: |
      call activate py$(python.version)
      pip install -e .
      echo Test onnxruntime installation... && python -c "import onnxruntime"
      coverage run --include=keras2onnx/* --omit=keras2onnx/ktf2onnx/* tests/test_layers.py
      coverage report -m
      coverage html
    displayName: 'coverage'

  - task: PublishTestResults@2
    inputs:
      testResultsFiles: '**/test-results-*.xml'
      testRunTitle: 'Python $(python.version)'
    condition: succeededOrFailed()
